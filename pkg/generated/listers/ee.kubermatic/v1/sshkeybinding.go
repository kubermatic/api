// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "k8c.io/api/v3/pkg/apis/ee.kubermatic/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SSHKeyBindingLister helps list SSHKeyBindings.
// All objects returned here must be treated as read-only.
type SSHKeyBindingLister interface {
	// List lists all SSHKeyBindings in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.SSHKeyBinding, err error)
	// SSHKeyBindings returns an object that can list and get SSHKeyBindings.
	SSHKeyBindings(namespace string) SSHKeyBindingNamespaceLister
	SSHKeyBindingListerExpansion
}

// sSHKeyBindingLister implements the SSHKeyBindingLister interface.
type sSHKeyBindingLister struct {
	indexer cache.Indexer
}

// NewSSHKeyBindingLister returns a new SSHKeyBindingLister.
func NewSSHKeyBindingLister(indexer cache.Indexer) SSHKeyBindingLister {
	return &sSHKeyBindingLister{indexer: indexer}
}

// List lists all SSHKeyBindings in the indexer.
func (s *sSHKeyBindingLister) List(selector labels.Selector) (ret []*v1.SSHKeyBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SSHKeyBinding))
	})
	return ret, err
}

// SSHKeyBindings returns an object that can list and get SSHKeyBindings.
func (s *sSHKeyBindingLister) SSHKeyBindings(namespace string) SSHKeyBindingNamespaceLister {
	return sSHKeyBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SSHKeyBindingNamespaceLister helps list and get SSHKeyBindings.
// All objects returned here must be treated as read-only.
type SSHKeyBindingNamespaceLister interface {
	// List lists all SSHKeyBindings in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.SSHKeyBinding, err error)
	// Get retrieves the SSHKeyBinding from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.SSHKeyBinding, error)
	SSHKeyBindingNamespaceListerExpansion
}

// sSHKeyBindingNamespaceLister implements the SSHKeyBindingNamespaceLister
// interface.
type sSHKeyBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SSHKeyBindings in the indexer for a given namespace.
func (s sSHKeyBindingNamespaceLister) List(selector labels.Selector) (ret []*v1.SSHKeyBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.SSHKeyBinding))
	})
	return ret, err
}

// Get retrieves the SSHKeyBinding from the indexer for a given namespace and name.
func (s sSHKeyBindingNamespaceLister) Get(name string) (*v1.SSHKeyBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("sshkeybinding"), name)
	}
	return obj.(*v1.SSHKeyBinding), nil
}
