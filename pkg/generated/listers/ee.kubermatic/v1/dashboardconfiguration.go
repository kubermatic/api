// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "k8c.io/api/v3/pkg/apis/ee.kubermatic/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DashboardConfigurationLister helps list DashboardConfigurations.
// All objects returned here must be treated as read-only.
type DashboardConfigurationLister interface {
	// List lists all DashboardConfigurations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.DashboardConfiguration, err error)
	// DashboardConfigurations returns an object that can list and get DashboardConfigurations.
	DashboardConfigurations(namespace string) DashboardConfigurationNamespaceLister
	DashboardConfigurationListerExpansion
}

// dashboardConfigurationLister implements the DashboardConfigurationLister interface.
type dashboardConfigurationLister struct {
	indexer cache.Indexer
}

// NewDashboardConfigurationLister returns a new DashboardConfigurationLister.
func NewDashboardConfigurationLister(indexer cache.Indexer) DashboardConfigurationLister {
	return &dashboardConfigurationLister{indexer: indexer}
}

// List lists all DashboardConfigurations in the indexer.
func (s *dashboardConfigurationLister) List(selector labels.Selector) (ret []*v1.DashboardConfiguration, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.DashboardConfiguration))
	})
	return ret, err
}

// DashboardConfigurations returns an object that can list and get DashboardConfigurations.
func (s *dashboardConfigurationLister) DashboardConfigurations(namespace string) DashboardConfigurationNamespaceLister {
	return dashboardConfigurationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DashboardConfigurationNamespaceLister helps list and get DashboardConfigurations.
// All objects returned here must be treated as read-only.
type DashboardConfigurationNamespaceLister interface {
	// List lists all DashboardConfigurations in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.DashboardConfiguration, err error)
	// Get retrieves the DashboardConfiguration from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.DashboardConfiguration, error)
	DashboardConfigurationNamespaceListerExpansion
}

// dashboardConfigurationNamespaceLister implements the DashboardConfigurationNamespaceLister
// interface.
type dashboardConfigurationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DashboardConfigurations in the indexer for a given namespace.
func (s dashboardConfigurationNamespaceLister) List(selector labels.Selector) (ret []*v1.DashboardConfiguration, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.DashboardConfiguration))
	})
	return ret, err
}

// Get retrieves the DashboardConfiguration from the indexer for a given namespace and name.
func (s dashboardConfigurationNamespaceLister) Get(name string) (*v1.DashboardConfiguration, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("dashboardconfiguration"), name)
	}
	return obj.(*v1.DashboardConfiguration), nil
}
