// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "k8c.io/api/v3/pkg/apis/ee.kubermatic/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// GroupProjectBindingLister helps list GroupProjectBindings.
// All objects returned here must be treated as read-only.
type GroupProjectBindingLister interface {
	// List lists all GroupProjectBindings in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.GroupProjectBinding, err error)
	// GroupProjectBindings returns an object that can list and get GroupProjectBindings.
	GroupProjectBindings(namespace string) GroupProjectBindingNamespaceLister
	GroupProjectBindingListerExpansion
}

// groupProjectBindingLister implements the GroupProjectBindingLister interface.
type groupProjectBindingLister struct {
	indexer cache.Indexer
}

// NewGroupProjectBindingLister returns a new GroupProjectBindingLister.
func NewGroupProjectBindingLister(indexer cache.Indexer) GroupProjectBindingLister {
	return &groupProjectBindingLister{indexer: indexer}
}

// List lists all GroupProjectBindings in the indexer.
func (s *groupProjectBindingLister) List(selector labels.Selector) (ret []*v1.GroupProjectBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.GroupProjectBinding))
	})
	return ret, err
}

// GroupProjectBindings returns an object that can list and get GroupProjectBindings.
func (s *groupProjectBindingLister) GroupProjectBindings(namespace string) GroupProjectBindingNamespaceLister {
	return groupProjectBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GroupProjectBindingNamespaceLister helps list and get GroupProjectBindings.
// All objects returned here must be treated as read-only.
type GroupProjectBindingNamespaceLister interface {
	// List lists all GroupProjectBindings in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.GroupProjectBinding, err error)
	// Get retrieves the GroupProjectBinding from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.GroupProjectBinding, error)
	GroupProjectBindingNamespaceListerExpansion
}

// groupProjectBindingNamespaceLister implements the GroupProjectBindingNamespaceLister
// interface.
type groupProjectBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GroupProjectBindings in the indexer for a given namespace.
func (s groupProjectBindingNamespaceLister) List(selector labels.Selector) (ret []*v1.GroupProjectBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.GroupProjectBinding))
	})
	return ret, err
}

// Get retrieves the GroupProjectBinding from the indexer for a given namespace and name.
func (s groupProjectBindingNamespaceLister) Get(name string) (*v1.GroupProjectBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("groupprojectbinding"), name)
	}
	return obj.(*v1.GroupProjectBinding), nil
}
