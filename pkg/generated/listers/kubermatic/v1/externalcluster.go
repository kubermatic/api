// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "k8c.io/api/v2/pkg/apis/kubermatic/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ExternalClusterLister helps list ExternalClusters.
// All objects returned here must be treated as read-only.
type ExternalClusterLister interface {
	// List lists all ExternalClusters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ExternalCluster, err error)
	// ExternalClusters returns an object that can list and get ExternalClusters.
	ExternalClusters(namespace string) ExternalClusterNamespaceLister
	ExternalClusterListerExpansion
}

// externalClusterLister implements the ExternalClusterLister interface.
type externalClusterLister struct {
	indexer cache.Indexer
}

// NewExternalClusterLister returns a new ExternalClusterLister.
func NewExternalClusterLister(indexer cache.Indexer) ExternalClusterLister {
	return &externalClusterLister{indexer: indexer}
}

// List lists all ExternalClusters in the indexer.
func (s *externalClusterLister) List(selector labels.Selector) (ret []*v1.ExternalCluster, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ExternalCluster))
	})
	return ret, err
}

// ExternalClusters returns an object that can list and get ExternalClusters.
func (s *externalClusterLister) ExternalClusters(namespace string) ExternalClusterNamespaceLister {
	return externalClusterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ExternalClusterNamespaceLister helps list and get ExternalClusters.
// All objects returned here must be treated as read-only.
type ExternalClusterNamespaceLister interface {
	// List lists all ExternalClusters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ExternalCluster, err error)
	// Get retrieves the ExternalCluster from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.ExternalCluster, error)
	ExternalClusterNamespaceListerExpansion
}

// externalClusterNamespaceLister implements the ExternalClusterNamespaceLister
// interface.
type externalClusterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ExternalClusters in the indexer for a given namespace.
func (s externalClusterNamespaceLister) List(selector labels.Selector) (ret []*v1.ExternalCluster, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ExternalCluster))
	})
	return ret, err
}

// Get retrieves the ExternalCluster from the indexer for a given namespace and name.
func (s externalClusterNamespaceLister) Get(name string) (*v1.ExternalCluster, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("externalcluster"), name)
	}
	return obj.(*v1.ExternalCluster), nil
}
