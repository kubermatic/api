// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "k8c.io/api/v3/pkg/apis/kubermatic/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClusterTemplateInstanceLister helps list ClusterTemplateInstances.
// All objects returned here must be treated as read-only.
type ClusterTemplateInstanceLister interface {
	// List lists all ClusterTemplateInstances in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ClusterTemplateInstance, err error)
	// ClusterTemplateInstances returns an object that can list and get ClusterTemplateInstances.
	ClusterTemplateInstances(namespace string) ClusterTemplateInstanceNamespaceLister
	ClusterTemplateInstanceListerExpansion
}

// clusterTemplateInstanceLister implements the ClusterTemplateInstanceLister interface.
type clusterTemplateInstanceLister struct {
	indexer cache.Indexer
}

// NewClusterTemplateInstanceLister returns a new ClusterTemplateInstanceLister.
func NewClusterTemplateInstanceLister(indexer cache.Indexer) ClusterTemplateInstanceLister {
	return &clusterTemplateInstanceLister{indexer: indexer}
}

// List lists all ClusterTemplateInstances in the indexer.
func (s *clusterTemplateInstanceLister) List(selector labels.Selector) (ret []*v1.ClusterTemplateInstance, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ClusterTemplateInstance))
	})
	return ret, err
}

// ClusterTemplateInstances returns an object that can list and get ClusterTemplateInstances.
func (s *clusterTemplateInstanceLister) ClusterTemplateInstances(namespace string) ClusterTemplateInstanceNamespaceLister {
	return clusterTemplateInstanceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ClusterTemplateInstanceNamespaceLister helps list and get ClusterTemplateInstances.
// All objects returned here must be treated as read-only.
type ClusterTemplateInstanceNamespaceLister interface {
	// List lists all ClusterTemplateInstances in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ClusterTemplateInstance, err error)
	// Get retrieves the ClusterTemplateInstance from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.ClusterTemplateInstance, error)
	ClusterTemplateInstanceNamespaceListerExpansion
}

// clusterTemplateInstanceNamespaceLister implements the ClusterTemplateInstanceNamespaceLister
// interface.
type clusterTemplateInstanceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ClusterTemplateInstances in the indexer for a given namespace.
func (s clusterTemplateInstanceNamespaceLister) List(selector labels.Selector) (ret []*v1.ClusterTemplateInstance, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ClusterTemplateInstance))
	})
	return ret, err
}

// Get retrieves the ClusterTemplateInstance from the indexer for a given namespace and name.
func (s clusterTemplateInstanceNamespaceLister) Get(name string) (*v1.ClusterTemplateInstance, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("clustertemplateinstance"), name)
	}
	return obj.(*v1.ClusterTemplateInstance), nil
}
