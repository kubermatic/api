// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "k8c.io/api/v2/pkg/apis/kubermatic/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KubermaticSettingLister helps list KubermaticSettings.
// All objects returned here must be treated as read-only.
type KubermaticSettingLister interface {
	// List lists all KubermaticSettings in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.KubermaticSetting, err error)
	// KubermaticSettings returns an object that can list and get KubermaticSettings.
	KubermaticSettings(namespace string) KubermaticSettingNamespaceLister
	KubermaticSettingListerExpansion
}

// kubermaticSettingLister implements the KubermaticSettingLister interface.
type kubermaticSettingLister struct {
	indexer cache.Indexer
}

// NewKubermaticSettingLister returns a new KubermaticSettingLister.
func NewKubermaticSettingLister(indexer cache.Indexer) KubermaticSettingLister {
	return &kubermaticSettingLister{indexer: indexer}
}

// List lists all KubermaticSettings in the indexer.
func (s *kubermaticSettingLister) List(selector labels.Selector) (ret []*v1.KubermaticSetting, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.KubermaticSetting))
	})
	return ret, err
}

// KubermaticSettings returns an object that can list and get KubermaticSettings.
func (s *kubermaticSettingLister) KubermaticSettings(namespace string) KubermaticSettingNamespaceLister {
	return kubermaticSettingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KubermaticSettingNamespaceLister helps list and get KubermaticSettings.
// All objects returned here must be treated as read-only.
type KubermaticSettingNamespaceLister interface {
	// List lists all KubermaticSettings in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.KubermaticSetting, err error)
	// Get retrieves the KubermaticSetting from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.KubermaticSetting, error)
	KubermaticSettingNamespaceListerExpansion
}

// kubermaticSettingNamespaceLister implements the KubermaticSettingNamespaceLister
// interface.
type kubermaticSettingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KubermaticSettings in the indexer for a given namespace.
func (s kubermaticSettingNamespaceLister) List(selector labels.Selector) (ret []*v1.KubermaticSetting, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.KubermaticSetting))
	})
	return ret, err
}

// Get retrieves the KubermaticSetting from the indexer for a given namespace and name.
func (s kubermaticSettingNamespaceLister) Get(name string) (*v1.KubermaticSetting, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("kubermaticsetting"), name)
	}
	return obj.(*v1.KubermaticSetting), nil
}
